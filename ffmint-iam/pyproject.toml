[project]
name = "FFMint"
version = "0.1.0"
description = "FFMint is your ultimate digital platform. It unites portfolios, retail, service businesses, and publishers (creators, news) in one intuitive app. Launch custom-branded sites, manage operations, and connect, all seamlessly."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "asyncpg>=0.30.0",
    "fastapi[standard]>=0.115.12",
    "isort>=6.0.1",
    "passlib[bcrypt]>=1.7.4",
    "psycopg2-binary>=2.9.10",
    "pydantic>=2.11.5",
    "pydantic-extra-types>=2.10.5",
    "pytest>=8.4.0",
    "pytest-dotenv>=0.5.2",
    "python-dotenv>=1.1.0",
    "python-jose[cryptography]>=3.5.0",
    "sqlalchemy>=2.0.41",
    "uvicorn>=0.34.3",
]

[tool.uv]
dev-dependencies = [
  "black>=25.1.0",
  "ruff>=0.11.12"
]

[tool.ruff]
# Maximum allowed line length
line-length = 88

# Which codes to select (E: pycodestyle, F: pyflakes, I: import‐related, R: Ruff rules, W: warnings)
lint.select = ["E", "F", "I", "R", "W"]


[tool.isort]
# Use a known profile (e.g. "black", "google", "pep8")—choose whichever you prefer.
profile = "black"

# Match the same max line length as Ruff
line_length = 88

# Ensure that isort groups imports in a conventional order
known_first_party = ["app", "ffmint-iam"]  # adjust to match your project layout

[tool.pytest.ini_options]
minversion = "6.0" # Minimum pytest version (adjust if needed)
addopts = "-ra --showlocals --strict-markers" # Common helpful options
testpaths = [
    "tests",  # This tells pytest to look for tests inside the 'tests/' directory
]
pythonpath = ["."] # Explicitly adds the project root to Python's sys.path for module resolution.

# You can also add more specific settings if needed:
python_files = "test_*.py" # Only collect files starting with 'test_'
python_classes = "Test"    # Only collect classes starting with 'Test'
python_functions = "test_" # Only collect functions functions starting with 'test_'

